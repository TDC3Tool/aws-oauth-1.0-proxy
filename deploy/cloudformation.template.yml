AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Parameters:
  ClientKey:
    Type: String
  ClientSecret:
    Type: String
  ApiUrl:
    Type: String
  OAuthCustomHeaders:
    Type: String
  AuthorizeCallbackUri:
    Type: String
Resources:
  BasicOAuthLambdaExecutionPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: Basic Lambda Execution for the aws-oauth-1.0-proxy lambdas.
      ManagedPolicyName: basic-oauth-lambda-execution-managed-policy
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Action: [ "logs:CreateLogGroup", "logs:CreateLogStream", "logs:PutLogEvents" ]
            Effect:  Allow
            Resource: "arn:aws:logs:*:*:*"
          - 
            Action: "sns:Publish"
            Effect: "Allow"
            Resource: "*"
  OAuthFirstLegLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: artifact.zip
      Description: OAuth First Leg Lambda Function
      FunctionName: oauth-first-leg
      Handler: index.firstLegHandler
      Policies:
        - !Ref BasicOAuthLambdaExecutionPolicy
        - !ImportValue SharedSecurity-PipelineKeyDecryptPolicyArn
      Runtime: nodejs10.x
      Timeout: 30
      MemorySize: 256
      Events:
        PostResource:
          Type: Api
          Properties:
            Path: /firstLegAuth
            Method: post
      Environment:
        Variables:
          CLIENT_KEY: !Ref ClientKey
          CLIENT_SECRET: !Ref ClientSecret
          API_URL: !Ref ApiUrl
          OAUTH_CUSTOM_HEADERS: !Ref OAuthCustomHeaders
          AUTHORIZE_CALLBACK_URI: !Ref AuthorizeCallbackUri
          SNS_SUCCESS_ARN: !Ref SuccessTopic
          SNS_NONSUCCESS_ARN: !Ref FailTopic
  OAuthThirdLegLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: artifact.zip
      Description: OAuth Third Leg Lambda Function
      FunctionName: oauth-third-leg
      Handler: index.thirdLegHandler
      Policies:
        - !Ref BasicOAuthLambdaExecutionPolicy
        - !ImportValue SharedSecurity-PipelineKeyDecryptPolicyArn
      Runtime: nodejs10.x
      Timeout: 30
      MemorySize: 256
      Events:
        PostResource:
          Type: Api
          Properties:
            Path: /thirdLegAuth
            Method: post
      Environment:
        Variables:
          CLIENT_KEY: !Ref ClientKey
          CLIENT_SECRET: !Ref ClientSecret
          API_URL: !Ref ApiUrl
          OAUTH_CUSTOM_HEADERS: !Ref OAuthCustomHeaders
          AUTHORIZE_CALLBACK_URI: !Ref AuthorizeCallbackUri
          SNS_SUCCESS_ARN: !Ref SuccessTopic
          SNS_NONSUCCESS_ARN: !Ref FailTopic
  OAuthSignRequestPostLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: artifact.zip
      Description: OAuth Sign Request Post Lambda Function
      FunctionName: oauth-sign-request-post
      Handler: index.oAuthSignRequestPost
      Policies:
        - !Ref BasicOAuthLambdaExecutionPolicy
        - !ImportValue SharedSecurity-PipelineKeyDecryptPolicyArn
      Runtime: nodejs10.x
      Timeout: 30
      MemorySize: 256
      Events:
        PostResource:
          Type: Api
          Properties:
            Path: /oAuthSignRequest
            Method: post
      Environment:
        Variables:
          CLIENT_KEY: !Ref ClientKey
          CLIENT_SECRET: !Ref ClientSecret
          API_URL: !Ref ApiUrl
          OAUTH_CUSTOM_HEADERS: !Ref OAuthCustomHeaders
          AUTHORIZE_CALLBACK_URI: !Ref AuthorizeCallbackUri
          SNS_SUCCESS_ARN: !Ref SuccessTopic
          SNS_NONSUCCESS_ARN: !Ref FailTopic
  OAuthSignRequestGetLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: artifact.zip
      Description: OAuth Sign Request Get Lambda Function
      FunctionName: oauth-sign-request-get
      Handler: index.oAuthSignRequestGet
      Policies:
        - !Ref BasicOAuthLambdaExecutionPolicy
        - !ImportValue SharedSecurity-PipelineKeyDecryptPolicyArn
      Runtime: nodejs10.x
      Timeout: 30
      MemorySize: 256
      Events:
        GetResource:
          Type: Api
          Properties:
            Path: /oAuthSignRequest
            Method: get
      Environment:
        Variables:
          CLIENT_KEY: !Ref ClientKey
          CLIENT_SECRET: !Ref ClientSecret
          API_URL: !Ref ApiUrl
          OAUTH_CUSTOM_HEADERS: !Ref OAuthCustomHeaders
          AUTHORIZE_CALLBACK_URI: !Ref AuthorizeCallbackUri
          SNS_SUCCESS_ARN: !Ref SuccessTopic
          SNS_NONSUCCESS_ARN: !Ref FailTopic
  OAuthSignRequestDeleteLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: artifact.zip
      Description: OAuth Sign Request Delete Lambda Function
      FunctionName: oauth-sign-request-delete
      Handler: index.oAuthSignRequestDelete
      Policies:
        - !Ref BasicOAuthLambdaExecutionPolicy
        - !ImportValue SharedSecurity-PipelineKeyDecryptPolicyArn
      Runtime: nodejs10.x
      Timeout: 30
      MemorySize: 256
      Events:
        DeleteResource:
          Type: Api
          Properties:
            Path: /oAuthSignRequest
            Method: delete
      Environment:
        Variables:
          CLIENT_KEY: !Ref ClientKey
          CLIENT_SECRET: !Ref ClientSecret
          API_URL: !Ref ApiUrl
          OAUTH_CUSTOM_HEADERS: !Ref OAuthCustomHeaders
          AUTHORIZE_CALLBACK_URI: !Ref AuthorizeCallbackUri
          SNS_SUCCESS_ARN: !Ref SuccessTopic
          SNS_NONSUCCESS_ARN: !Ref FailTopic
  SuccessTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: aws-auth-success-topic
      TopicName: aws-auth-success-topic
  FailTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: aws-auth-failed-topic
      TopicName: aws-auth-failed-topic
Outputs:
  ApiURL:
    Description: API endpoint for the lambdas
    Value: !Sub https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/
